
-------------------------
标题					 |
-------------------------
	--
	==
		* Setext 形式是用底线的形式,利用 = (最高阶标题)和 - (第二阶标题)

	#
	
		* Atx 形式则是在行首插入 1 到 6 个 # ,对应到标题 1 到 6 阶


-------------------------
区块引用				 |
-------------------------
	>
		* 引用块
		* 相邻的两个 ">" 会被合并为一个
		* 可以嵌套, ">" 中有 ">"
		* 引用的区块内也可以使用其他的 Markdown 语法,包括标题,列表,代码区块等
			> ## 这是一个标题

-------------------------
列表					 |
-------------------------
	*
	+
	-
		* 无序列表使用星号,加号或是减号作为列表标记
	1.  
	2.  
	3. 
		* 有序列表则使用数字接着一个英文句点
	
	
	* 列表项目标记通常是放在最左边,但是其实也可以缩进,最多 3 个空格,项目标记后面则一定要接着至少一个空格或制表符
	* 如果要在列表项目内放进引用，那 > 就需要缩进
		*   A list item with a blockquote:
			> This is a blockquote
			> inside a list item.

	* 如果要放代码区块的话,该区块就需要缩进两次,也就是 8 个空格或是 2 个制表符
		*   一列表项包含一个列表区块

				<代码写在这>
	* 在行首出现数字-句点-空白,要避免这样的状况,可以在句点前面加上反斜杠
			1986\. What a great season.

-------------------------
代码块					 |
-------------------------
	* 要在 Markdown 中建立代码区块很简单,只要简单地缩进 4 个空格或是 1 个制表符就可以
	* 一个代码区块会一直持续到没有缩进的那一行(或是文件结尾)
	* 在代码区块里面, & , < 和 > 会自动转成 HTML 实体,这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码

-------------------------
分隔线					 |
-------------------------
	* 可以在一行中用三个以上的星号,减号,底线来建立一个分隔线
	* 行内不能有其他东西,你也可以在星号或是减号中间插入空格,下面每种写法都可以建立分隔线
	
		* * *

		***

		*****

		- - -

		---------------------------------------

-------------------------
区段元素				 |
-------------------------
	# 连接
		* 支持两种形式的链接语法:行内式和参考式两种形式
		* 不管是哪一种,链接文字都是用 [方括号] 来标记
		* 想要加上链接的 title 文字,只要在网址后面,用双引号把 title 文字包起来即可
		* 支持使用相对路径
			[ 去我们的网站 ]( http://javaweb.io  "Javaweb开发者社区")
		
		* 参考式
			你好 [点击我跳转社区] [id] --KevinBlandy.				//通过ID定义一个连接,名称与ID
			[id]: http://javaweb.io/  "Javaweb开发者社区"			//通过ID,去赋值连接地址和标题

			* 一下几种定义都是合法的
				[foo]: http://example.com/  "Optional Title Here"
				[foo]: http://example.com/  'Optional Title Here'
				[foo]: http://example.com/  (Optional Title Here)
	
	
	# 强调
		* 唯一的限制是,你用什么符号开启标签,就要用什么符号结束
		* 用星号(*)和底线(_)作为标记强调字词的符号,被 * 或 _ 包围的字词会被转成用 <em> 标签包围
		* 用两个 * 或 _ 包起来的话，则会被转成 <strong>
			**哈哈**
			*洗洗*
			_对我_
			__哈哈哈__
		* 如果你的 * 和 _ 两边都有空白的话,它们就只会被当成普通的符号
	
	# 代码
		* 标记一小段行内代码，你可以用反引号把它包起来
		* 也可以选择性的在上面声明代码类型
			```python
			print('Hello')
			```
		* 如果要在代码区段内插入反引号,你可以用多个反引号来开启和结束代码区段
			
	
	# 图片
		* 同样也允许两种样式: 行内式和参考式
		* 行内式的图片语法
			![Alt text](/path/to/img.jpg)
			![Alt text](/path/to/img.jpg "Optional title")
		* 参考式
			![Alt text][id]
			[id]: url/to/image  "Optional title attribute"
	
-------------------------
其他					 |
-------------------------
	# 自动链接
		* 支持以比较简短的自动链接形式来处理网址和电子邮件信箱
		* 只要是用方括号包起来, Markdown 就会自动把它转成链接
		* 一般网址的链接文字就和链接地址一样
			<http://javaweb.io>
			Markdown 会转为:
				<a href="http://javaweb.io">http://javaweb.io</a>
	
			<address@example.com>
	
	# 反斜杠
		* 利用反斜杠来插入一些在语法中有其它意义的符号
		* 例如:如果你想要用星号加在文字旁边的方式来做出强调效果(但不用 <em> 标签),你可以在星号的前面加上反斜杠
			\*literal asterisks\*
		
		* Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号

			\   反斜线
			`   反引号
			*   星号
			_   底线
			{}  花括号
			[]  方括号
			()  括弧
			#   井字号
			+   加号
			-   减号
			.   英文句点
			!   惊叹号


-------------------------
表格					 |
-------------------------
# 普通

|  表头   | 表头  |
|  ----  | ----  |
| 单元格  | 单元格 |
| 单元格  | 单元格 |
	
# 对齐

| 左对齐 | 右对齐 | 居中对齐 |
| :-----| ----: | :----: |
| 单元格 | 单元格 | 单元格 |
| 单元格 | 单元格 | 单元格 |