--------------
盒模型
--------------
	# height和width, 需要加上: 内边距, 边框, 外边距
		* 当给一个元素设置宽或高的时候，指定的是内容的宽或高。
		* 最终占用的宽高，是所有内边距、边框、外边距追加到该宽度上的值。
	
	# box-sizing
		* 默认值为 content-box 这意味任何指定的宽或高都只会设置内容盒子的大小
		* 设置为 border-box后, height和width属性会设置内容, 内边距以及边框的大小总和
	
	# 高度
		* 通常最好避免给元素指定明确的高度
		* 普通文档流是为限定的宽度和'无限的高度'设计的, 内容会填满视口的宽度, 然后在必要的时候折行
		* 容器的高度由内容天然地决定, 而不是容器自己决定
	
	# 控制内容溢出问题
		* overflow 
			visible	
				* 所有内容可见，即使溢出容器边缘。
			hidden
				* 溢出容器内边距边缘的内容被裁剪，无法看见。
			scroll
				* 容器出现滚动条，用户可以通过滚动查看剩余内容。
				* 在一些操作系统上，会出现水平和垂直两种滚动条，即使所有内容都可见（不溢出）。不过，在这种情况下，滚动条不可滚动（置灰）。
			auto
				* 只有内容溢出时容器才会出现滚动条。
		
		* overflow-y
		* overflow-x
			* 属性值同上, 可以分别控制x, y轴溢出的问题
			* 不要尝试同时给x, y指定不同的值, 可能有意想不到的后果
		
	# 百分比高度
		* 百分比参考的是元素容器块的大小, 但是容器的高度通常是由子元素的高度决定的. 这样会造成死循环, 浏览器处理不了, 因此它会忽略这个声明
		* 要想让百分比高度生效, 必须给父元素明确定义一个高度


	# min-height,max-height, min-width, max-width
		* 指定最宽高的最低/高值
	
	# 等高列
		* table 布局 + 负外边距(解决table列边距带来的对不整齐问题)
		* flex 布局

	# 垂直居中
		* vertical-align: middle
			* 声明只会影响行内元素或者table-cell元素, 如果是块级元素浏览器会直接忽略。
			* 对于行内元素，它控制着该元素跟同一行内其他元素之间的对齐关系。
			* 对于显示为table-cell的元素，vertical-align控制了内容在单元格内的对齐。
		
		* 给容器相等的上下内边距(padding)值
		* 容器需要指定高度或者避免使用内边距? 对容器使用display: table-cell和vertical-align: middle
		* 使用Flex
		* 容器里面的内容只有一行文字？设置一个大的行高，让它等于理想的容器高度。这样会让容器高度扩展到能够容纳行高。如果内容不是行内元素，可以设置为inline-block。
		* 容器和内容的高度都知道？将内容绝对定位。（只有当前面提到的方法都无效时才推荐这种方式。）
		* 不知道内部元素的高度？用绝对定位结合变形（transform）。（还是只有当前面提到的方法都无效时才推荐该方法。）
	
	# 负外边距
		* 不同于内边距和边框宽度，外边距可以设置为负值。
		* 负外边距有一些特殊用途，比如让元素重叠或者拉伸到比容器还宽。

		* 设置左边或顶部的负外边距，元素就会相应地向左或向上移动，导致元素与它前面的元素重叠
		* 如果设置右边或者底部的负外边距，并不会移动元素，而是将它后面的元素拉过来
		
		* 给元素底部加上负外边距并不等同于给它下面的元素顶部加上负外边距。

--------------
上下边距折叠
--------------
	# 只有上下外边距会产生折叠，左右外边距不会折叠

	# 外边距折叠
		* 当顶部和/或底部的外边距相邻时，就会重叠，产生单个外边距。这种现象被称作折叠。
			<p/>, 默认有 1em 的上下边距, 前后叠放的时候, 并不会产生2em的间距, 而是会折叠, 只有1em边距
		
		* 折叠外边距的大小等于相邻外边距中的最大值

	# 多个外边距折叠
		* 即使两个元素不是相邻的兄弟节点也会产生外边距折叠。
		* 所有相邻的顶部和底部外边距会折叠到一起。
		* 如果在页面中添加一个空的、无样式的div（没有高度、边框和内边距），它自己的顶部和底部外边距就会折叠。
	
	
	# 防止外边距折叠
		* 对容器使用overflow: auto（或者非visible的值），防止内部元素的外边距跟容器外部的外边距折叠。这种方式副作用最小。
		* 在两个外边距之间加上边框或者内边距，防止它们折叠。
		* 如果容器为浮动元素、内联块、绝对定位或固定定位时，外边距不会在它外面折叠。
		* 当使用Flexbox布局时，弹性布局内的元素之间不会发生外边距折叠。网格布局同理。
		* 当元素显示为table-cell时不具备外边距属性，因此它们不会折叠。此外还有table-row和大部分其他表格显示类型，但不包括table、table-inline、table-caption。
	

----------------------------
容器内元素间距
----------------------------
	# 猫头鹰选择器
		* 它会选中页面上有着相同父级的非第一个子元素

		body * + * {   
			 margin-top: 1.5em;             
		}

	



		