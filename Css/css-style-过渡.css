---------------------
过渡
---------------------
	# Transition 可以在不利用Flash动画或者 Js 的情况下。为元素从一种样式转换为另一种样式时添加效果。

	# 过渡动画：一个状态，渐渐过渡到另一个状态
	# 经常和 :hover :active 配合使用

	transition: property duration timing-function delay
		* property: 需要变化的 css 属性，宽高，背景，内外边距都可以。如果所有属性都需要变换，可以设置为 all，设置为 none 表示没有动画
		* duration: 效果持续时间，单位是秒
		* timing-function: 运动曲线，默认为 ease 可以省略
			ease		逐渐慢下来
			ease-in		加速
			ease-out	减速
			ease-in-out	先加速后减速
			linear		匀速
			step-start
			step-end
			steps(...)
				* 跟从一个值到另一个值的基于贝塞尔曲线的流畅过渡不同，这个函数是一系列非连续性的瞬时“阶跃
				* 阶跃函数需要两个参数：阶跃次数和一个用来表示每次变化发生在阶跃的开始还是结束的关键词（start 或者 end）

			cubic-bezier(number)
				* 自定义贝塞尔曲线，x 轴是时间，y 轴是距离
				* 可以在线制作
					https://cubic-bezier.com/

		* delay: 延迟开始的时间，单位为秒，默认为 0s，可以省略

		* 可以一次性指定多组属性
			 transition: width 1.5s linear 0s, height 2s;
	
	# 完整的属性
		transition-property: all
		transition-duration: 0s
		transition-timing-function: ease
		transition-delay: 0s;
	
	# 注意不是所有的属性都能过渡
		* 值为数字，或者值能转为数字的属性，都支持过渡，否则不支持过渡。
		* 例如关键字：auth/max-content 之类的东西，不是具体的数值，就不支持过度

		* 解决办法就是使用：interpolate-size 属性（但是有兼容性问题）
		* 用过这个属性可以在 <length-percentage> 值与诸如 auto、fit-content 或 max-content 等固有尺寸值之间启用动画和过渡效果。
			
			transition: all .3s;
			interpolate-size: allow-keywords;
		
		* demo
			 <p>四十年来家国</p>

			 
			p {
				cursor: pointer;
				padding: 2px;
				margin: 0;
				font-size: 1.5rem;
				height: 1.5rem;
				width:  1.5rem;
				line-height: 1.5rem;
				background-color: skyblue;
				overflow: hidden;

				transition: .3s;				   /* 动画 */
				interpolate-size: allow-keywords;  /* 让 max-content 内容生效 */
			}

			p:hover {
				width: max-content;		/* 改变宽度为最大动画 */
			}

		* 参考 https://developer.mozilla.org/en-US/docs/Web/CSS/interpolate-size


	# 参考: https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition

