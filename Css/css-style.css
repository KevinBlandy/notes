----------------------
常用的样式
----------------------
	# 垂直对齐: vertical-align
		* 指定行内元素（inline）、行内块元素或表格单元格（table-cell）元素的垂直对齐方式。不能用它垂直对齐块级元素！
		* vertical-align 属性可被用于两种环境：
			* 使行内元素盒模型与其行内元素容器垂直对齐。例如，用于垂直对齐一行文本内的图片 <img>：
			* 垂直对齐表格单元内容。
		
		* vertical-align: top;			/* 中线 （文字顶部）*/
		* vertical-align: middle;		/* 中线对齐 */
		* vertical-align: baseline;		/* 基线对齐（文字底部） */
		* vertical-align: bottom;		/* 底线对齐（容器底部）*/

		* vertical-align: sub;			/* 元素的基线与父元素的下标基线对齐 */
		* vertical-align: super;		/* 元素的基线与父元素的上标基线对齐。 */

		* vertical-align: text-top;
		* vertical-align: text-bottom;

		* 参考: https://developer.mozilla.org/zh-CN/docs/Web/CSS/vertical-align


	# 鼠标样式: cursor
		* cursor: default;		/* 鼠标 */
		* cursor: pointer;		/* 小手 */
		* cursor: move;			/* 移动 */
		* cursor: text;			/* 文本 */
		* cursor: not-allowed;	/* 禁止 */
		* cursor: zoom-in;		/* 放大镜 */
		* cursor: crosshair;	/* 十字准线 */
		* cursor: wait;			/* 加载，转圈儿 */
		* cursor: help;			/* 问号，帮助 */
		* cursor: grab;			/* 抓取 */

		* 参考: https://developer.mozilla.org/zh-CN/docs/Web/CSS/cursor
	
	# 尺寸调整: resize 
		* resize: both;			/* 可沿水平和竖直方向调整尺寸 */
		* resize: horizontal;	/* 沿水平方向调整其尺寸 */
		* resize: vertical;		/* 沿竖直方向调整其尺寸。 */
		* resize: none;			/* 禁止调整尺寸 */

		* resize 不适用于内联元素和 overflow 属性设置为 visible 的块元素

		* 参考: https://developer.mozilla.org/zh-CN/docs/Web/CSS/resize
	
	# 指定元素的不透明度: opacity
		* <number> /*  0.0 到 1.0 范围内的数字值，这个数值既包含也代表通道的透明度，也就是 alpha 通道的值。任何一个溢出这个取值区间的值，尽管有效，但会被解析为在取值范围内最靠近它的值。 */
		* 参考: https://developer.mozilla.org/zh-CN/docs/Web/CSS/opacity
		* opacity 是一个属性，设置的是整个元素（包括元素里的内容）的不透明度。

	# 轮廓线: outline
		* 简写
			outline-color
			outline-style
			outline-width
		
		* outline-offset 不是 outline 的子属性，它是独立的，要单独声明
			<length>
				* 元素与其轮廓线之间的间距宽度。负值会将轮廓线置于元素内部。当值为 0 时，轮廓线与元素之间没有间距。

		* 和 border 很类似，但有如下区别：
			* outline 不占据空间，绘制于元素内容周围。
			* 根据规范，outline 通常是矩形，但也可以是非矩形的。
		
		* 可使用以如下一个、两个或三个值来声明，且顺序不重要。
			color：默认值为 currentcolor
			style：默认值为 none
			width：默认值为 medium
		
		* 将 outline 设置为 0 或 none 会移除浏览器的默认聚焦样式

		* 参考: https://developer.mozilla.org/zh-CN/docs/Web/CSS/outline

	
	# 滤镜: filter
		* 值是函数	
			blur()
				* filter: blur(5px);
				* 值越大，图片越模糊

			brightness()
			contrast()
			drop-shadow()
			grayscale()
			hue-rotate()
			invert()
			opacity()
			sepia()
		
		* 可以组合任意数量的函数来控制渲染。滤镜将按声明顺序依次应用
		*  参考: https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter
	
	# 可替换元素适应容器：object-fit
		* 指定可替换元素（例如：<img> 或 <video>）的内容应该如何适应到其使用高度和宽度确定的框。
		* 可选值
			contain
				* 等比例缩放到刚好能放下，但是可能没填充满。

			cover
				* 等比例缩放到完全覆盖容器，资源可能被裁切。

			fill
				* 缩放到完全覆盖容器，资源可能会被拉伸。

			none
				* 被替换的内容将保持其原有的尺寸。

			scale-down
				* 内容的尺寸与 none 或 contain 中的一个相同，取决于它们两个之间谁得到的对象尺寸会更小一些。

	# 溢出处理：overflow
		* 参考：https://developer.mozilla.org/zh-CN/docs/Web/CSS/overflow
		* 是以下 CSS 属性的简写：

			overflow-x
			overflow-y
		
		* 可选值
			visible
				* 内容不能被裁减并且可能渲染到边距盒（padding）的外部。

			hidden
				* 如果需要，内容将被裁减以适应边距（padding）盒。不提供滚动条，也不支持允许用户滚动（例如通过拖拽或者使用滚轮）。内容可以以编程的方式滚动（例如，通过设置 scrollLeft 等属性的值或 scrollTo() 方法）, 因此该元素仍然是一个滚动的容器。
	
			clip
				* 类似于 hidden，内容将以元素的边距（padding）盒进行裁剪。clip 和 hidden 之间的区别是 clip 关键字禁止所有滚动，包括以编程方式的滚动。该盒子不是一个滚动的容器，并且不会启动新的格式化上下文。如果你希望开启一个新的格式化上下文，你可以使用 display: flow-root 来这样做。

			scroll
				* 如果需要，内容将被裁减以适应边距（padding）盒。无论是否实际裁剪了任何内容，浏览器总是显示滚动条，以防止滚动条在内容改变时出现或者消失。打印机可能会打印溢出的内容。

			auto
				* 取决于用户代理。如果内容适应边距（padding）盒，它看起来与 visible 相同，但是仍然建立了一个新的块级格式化上下文。如果内容溢出，则浏览器提供滚动条。

			overlay 已弃用
				* 行为与 auto 相同，但是滚动条绘制在内容之上，而不是占据空间。
		
	