-------------------
浮动
-------------------
	# 理解浮动
		* 浮动能将一个元素（通常是一张图片）拉到其容器的一侧，这样文档流就能够包围它。
		* 浮动元素会被移出正常文档流，并被拉到容器边缘。文档流会重新排列，但是它会包围浮动元素此刻所占据的空间。

		* 浮动是为了实现文字围绕浮动元素排列的效果。
	
	# 浮动的特性
		1. 浮动元素会脱离文档流
		2. 多个浮动元素会显示在一行，且元素顶部对齐
		3. 浮动元素具有行内块元素的特性（任何元素都可以浮动，浮动后都具有行内块元素特性）
			* 块级元素，未设置宽度的话。默认占满容器。此时浮动的话，宽度根据内容大小决定。
		
		4. 浮动元素不会压住下面标准流中的文字和图片
		
	# 浮动的盒子，只会影响浮动盒子后面的文档流，不会影响前面的
		* 因为这个特性，所以理论上来说：一个元素浮动了，它的兄弟元素也要浮动
	

-------------------
容器折叠
-------------------
	# 浮动元素不同于普通文档流的元素，它们的高度不会加到父元素上

-------------------
清理浮动
-------------------
	# clear 属性可以清除当前元素旁边的浮动元素
		* 可选值
			left	左边，清除向左浮动的元素
			right	右边，清除向右浮动的元素
			both	两边，让该元素移动到浮动元素的下面，而不是侧面

		* 但是 clear 属性只能对块级元素生效
	
	# 清除浮动元素的本质，就是清楚浮动元素带来的影响
			
	# 清除浮动的几种方式
		0. 额外标签
			* 在容器后面添加元素，设置清除浮动属性

		1. 父元素添加 overflow 属性
			* 设置值为：hidden、auto、scroll

		2. 父元素添加 after 伪元素
		3. 父元素添加 双伪 元素
		4. 父元素添加 display: flow-root 属性
			* 给 <div> 元素设置 display: flow-root 属性后，<div> 中的所有内容都会参与 BFC，浮动的内容不会从底部溢出。

	# ::after 伪类
		.clearfix::after {   /** 选中容器末尾的伪元素**/
		  display: block;     /** 将伪元素的display设置为非inline，并给定一个content值，以便让伪元素出现在文档中**/
		  content: " ";        
		  clear: both;  /**让伪元素清除容器中的所有浮动**/
		}

		.clearfix::after{
			content: "";		/*给定一个content值，以便让伪元素出现在文档中*/
			display: block;		/*只有块儿元素才能生效，伪元素默认为内联元素*/
			height: 0;			/*高度设置为0*/
			clear: both;		/*清除两边的浮动*/
			visibility: hidden;	/*隐藏元素*/
		}

		* 要给包含浮动的元素清除浮动，而不是给别的元素，比如浮动元素本身，或包含浮动的元素后面的兄弟元素。
	
	# 浮动元素的外边距不会折叠到 '清除浮动容器' 的外部，'非浮动元素' 的外边距则会正常折叠。
	# 使用 display: table 来包含外边距
	
		* display: table 元素（或者是伪元素），在元素内隐式创建了一个表格行和一个单元格（table-cell）。
		* 因为外边距无法通过单元格元素折叠，所以也无法通过设置了 display: table 的伪元素折叠。
		
		* 看起来似乎使用 display: table-cell 也能达到相同的效果，但是 clear 属性只能对块级元素生效。
		* 表格是块级元素，但是单元格并不是。因此，clear 属性无法跟 display:table-cell 一起使用。所以要用 display: table 来清除浮动，同时利用隐式创建单元格来包含外边距。

-------------------
bfc
-------------------
	# 块级格式化上下文 BFC(Block Formatting Context)
		* BFC是网页的一块区域，元素基于这块区域布局。
		* 虽然BFC本身是环绕文档流的一部分，但它将内部的内容与外部的上下文隔离开。
		* 这种隔离为创建BFC的元素做出了以下3件事情。

			1. 包含内部浮动：包含了内部所有元素的上下外边距。它们不会跟BFC外面的元素产生外边距折叠。
			2. 排除外部浮动：包含了内部所有的浮动元素。
			3. 阻止外边距重叠：不会跟BFC外面的浮动元素重叠。

		* BFC元素特性表现原则就是，内部子元素再怎么翻江倒海，翻云覆雨都不会影响外部的元素（清除浮动、防止外边距折叠）。

	# BFC里的内容不会跟外部的元素重叠或者相互影响。
		* 如果给元素增加clear属性，它只会清除自身所在BFC内的浮动。
		* 如果强制给一个元素生成一个新的BFC，它不会跟其他BFC重叠。

		* 完全没有必要对BFC元素设置 margin，可以使用浮动元素的 margin-right 或者 padding-right （BFC元素）轻松实现间距效果
	
	# 给元素添加以下的任意属性值都会创建BFC。
		* float: left 或 right ，不为 none 即可。
		* overflow: hidden 、auto 或 scroll 、不为 visible 即可。
		* display: inline-block、table-cell、table-caption、flex、inline-flex、grid 或 inline-grid。拥有这些属性的元素称为块级容器（block container）。
		* position: absolute 或 position: fixed
		* display: flow-root， 一个新的 display 属性的值，它可以创建无副作用的 BFC。在父级块中使用 display: flow-root 可以创建新的 BFC。

	
	# 网页的根元素也创建了一个顶级的BFC。

		
	
	# 参考: https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context

