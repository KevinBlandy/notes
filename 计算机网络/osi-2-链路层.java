-------------------------
链路层
-------------------------
	# 祯定义

		+-------+-----------------------+-------+
		|SOH	|	MTU(IP 数据报)		|EOT	|
		+-------+-----------------------+-------+

		* SOH(0x01)	00000001	Start Of Header
		* EOT(0x04)	00000100	End Of Transmission
	
	
	# 转义问题

		* 如果遇到数据报文中直接就包含了 00000100 (EOT) 数据，数据链路层就会错误地“找到帧的边界”​。
		* 要解决这个问题，就需要对数据报中的控制字符 SOH / EOT 进行转义

		* 在控制字符前插入转义字符: ESC(0x1B) 00011011
		* 接收端的数据链路层在把数据送往网络层之前删除这个插入的转义字符。这种方法称为字节填充(byte stuffing)或字符填充(character stuffing)
		* 如果转义字符也出现在数据当中，那么解决方法仍然是在转义字符的前面插入一个转义字符

	
	# 差错检查
		
		* 传输过程中可能会出现比特差错，即 1 变 0 或 0 变 1。
		* 在一段时间内，传输错误的比特占所传输比特总数的比率称为误码率BER (Bit Error Rate)。

		* 数据链路层广泛使用了循环冗余检验 CRC (Cyclic Redundancy Check) 的检错技术。
		* CRC 是一种检错方法，而 FCS 是添加在数据后面的冗余码，在检错方法上可以选用 CRC，但也可不选用 CRC。

		* 在数据链路层，发送端帧检验序列 FCS 的生成和接收端的 CRC 检验都是用硬件完成的，处理很迅速，因此并不会延误数据的传输。

-------------------------
点对点协议PPP
-------------------------

	# PPP 协议

		* https://datatracker.ietf.org/doc/html/rfc1661
		* https://www.rfc-editor.org/rfc/rfc1548.txt

		* 用户计算机和 ISP 进行通信时所使用的数据链路层协议


	# PPP 帧
		
		* https://datatracker.ietf.org/doc/html/rfc1331#section-3.1 

			+----------+----------+----------+----------+---------------+----------+----------+-----------------+
			|   Flag   | Address  | Control  | Protocol | Information	|   FCS    |   Flag   | Inter-frame Fill|
			| 01111110 | 11111111 | 00000011 | 16 bits  |      *		| 16 bits  | 01111110 | or next Address	|
			+----------+----------+----------+----------+---------------+----------+----------+-----------------+
		
			* Flag: 0x7E
				* 标志字段表示一个帧的开始或结束
				* 如果出现连续两个标志字段，就表示这是一个空帧，应当丢弃。
			
			* Address: 0xFF
				* 地址字段规定为0xFF
			
			* Control: 0x03
				* 控制字段规定为0x03
			
			* Protocol
				* 协议号，2 字节
					0x0021	信息字段就是IP数据报
					0xC021	信息字段是PPP链路控制协议LCP的数据
					0x8021	则信息字段是网络层的控制数据
				
			* Information
				* 信息，长度是可变的，不超过 1500 字节。
			

			* FCS
				* 使用 CRC 的帧检验序列 FCS，2 字节。
		
		* 字节填充
		* 零比特填充
			
	
	# PPPoE(PPP over Ethernet)
		
		* https://datatracker.ietf.org/doc/html/rfc2516

		* 为宽带上网的主机使用的链路层协议。这个协议把 PPP 帧再封装在以太网帧中（当然还要增加一些能够识别各用户的功能）​。
		
