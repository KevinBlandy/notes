--------	----------------------
固定大小
------------------------------
	# 固定集合，此集合需要提前创建好，而且大小是固定
		* 如果空间不足，那么最旧的文档将被删除，新的文档将取而代之。这意味着在插入新文档时，固定集合会自动淘汰最旧的文档。
		* 固定集合的访问模式是数据被顺序写入磁盘上的固定空间。这让它们在机械硬盘上的写入速度非常快

		* 固定集合不能被分片。如果一个更新或替换操作更改了固定集合中的文档大小，则该操作将失败。

	# 对文档的限制
		* 无法对文档进行删除
		* 不允许进行会导致文档大小增长的更新（文档大小必须是固定的）
	
	# 创建固定集合
		// capped	设置为固定集合
		// size		最多的存储的文档大小
		// max		最多存储的文档数量
		db.createCollection("my_collection2", {"capped" : true, "size" : 100000, "max" : 100});
	

		* 无论先达到哪一个限制，数据替换都会发生：固定集合不能超过 "max" 的数量限制，也不能超过 "size" 的空间限制。

	
	# 也可以把一个现有集合转换为固定集合


	# 可追加游标（tailable cursor）
		* 类似于 Linux 中的 tail -f，当有新文档插入集合中时，游标会继续获取新的结果。

	

		