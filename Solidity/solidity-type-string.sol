-------------------------
字符串
-------------------------
	# 字符串字面量使用双引号或单引号
		"foo" 'bar'
		
		* 可以拆分为多个连续的部分
		
			"foo" "bar" // 等于 "foobar"
		
		* 可以被隐式转换（本质上是一个 UTF-8 编码的字节序列，在编译器内部会被解释成原始 bytes 数据）
			
			// 字符串长度小于转换的字节类型，则在后面补0，反之异常
			bytes32 x = "abc";  // "abc" = [0x61, 0x62, 0x63] -> 0x6162630000000000000000000000000000000000000000000000000000000000

		
		* 字符串字面量只能包含可打印的 ASCII 字符，在 0x20 到 0x7E 之间（包括这两个值）
		
		* 支持转义字符
			\\
			\' 
			\" 
			\n
			\r
			\t
			\xNN
			\uNNNN
		
		*  以关键字 unicode 为前缀，可以包含任何有效的 UTF-8 序列（Emoji）

			string memory a = unicode"Hello 😃";

		
		* 以关键字 hex 为前缀，并用双引号或单引号括起来可以表示十六进制字面量
			
			hex"001122FF"
			hex'0011_22_FF'
			hex"00112233" hex"44556677"
			
			* 内容必须为十六进制数字，可以使用下划线分割
			* 也可以使用空格来连接多个十六进制字面量

			* 十六进制的行为类似于字符串字面量，但是不能隐式转换为 string 类型
			
				string memory s = string(hex"616263"); // 可以显示转成 "abc"
				bytes32 data = hex"616263";			// 不足32字节，后面的补0

			
			
		
